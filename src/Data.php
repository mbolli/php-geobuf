<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: geobuf.proto

namespace MBolli\PhpGeobuf;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>MBolli.PhpGeobuf.Data</code>
 */
class Data extends \Google\Protobuf\Internal\Message
{
    /**
     * global arrays of unique keys
     *
     * Generated from protobuf field <code>repeated string keys = 1;</code>
     */
    private $keys;
    /**
     *[default = 2]; // max coordinate dimensions
     *
     * Generated from protobuf field <code>optional uint32 dimensions = 2;</code>
     */
    protected $dimensions = 2;
    /**
     *[default = 6]; // number of digits after decimal point for coordinates
     *
     * Generated from protobuf field <code>optional uint32 precision = 3;</code>
     */
    protected $precision = 6;
    protected $data_type;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $keys
     *           global arrays of unique keys
     *     @type int $dimensions
     *          [default = 2]; // max coordinate dimensions
     *     @type int $precision
     *          [default = 6]; // number of digits after decimal point for coordinates
     *     @type \MBolli\PhpGeobuf\Data\FeatureCollection $feature_collection
     *     @type \MBolli\PhpGeobuf\Data\Feature $feature
     *     @type \MBolli\PhpGeobuf\Data\Geometry $geometry
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Geobuf::initOnce();
        parent::__construct($data);
    }

    /**
     * global arrays of unique keys
     *
     * Generated from protobuf field <code>repeated string keys = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getKeys()
    {
        return $this->keys;
    }

    /**
     * global arrays of unique keys
     *
     * Generated from protobuf field <code>repeated string keys = 1;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setKeys($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->keys = $arr;

        return $this;
    }

    /**
     *[default = 2]; // max coordinate dimensions
     *
     * Generated from protobuf field <code>optional uint32 dimensions = 2;</code>
     * @return int
     */
    public function getDimensions()
    {
        return isset($this->dimensions) ? $this->dimensions : 0;
    }

    public function hasDimensions()
    {
        return isset($this->dimensions);
    }

    public function clearDimensions()
    {
        unset($this->dimensions);
    }

    /**
     *[default = 2]; // max coordinate dimensions
     *
     * Generated from protobuf field <code>optional uint32 dimensions = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setDimensions($var)
    {
        GPBUtil::checkUint32($var);
        $this->dimensions = $var;

        return $this;
    }

    /**
     *[default = 6]; // number of digits after decimal point for coordinates
     *
     * Generated from protobuf field <code>optional uint32 precision = 3;</code>
     * @return int
     */
    public function getPrecision()
    {
        return isset($this->precision) ? $this->precision : 0;
    }

    public function hasPrecision()
    {
        return isset($this->precision);
    }

    public function clearPrecision()
    {
        unset($this->precision);
    }

    /**
     *[default = 6]; // number of digits after decimal point for coordinates
     *
     * Generated from protobuf field <code>optional uint32 precision = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setPrecision($var)
    {
        GPBUtil::checkUint32($var);
        $this->precision = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.MBolli.PhpGeobuf.Data.FeatureCollection feature_collection = 4;</code>
     * @return \MBolli\PhpGeobuf\Data\FeatureCollection|null
     */
    public function getFeatureCollection()
    {
        return $this->readOneof(4);
    }

    public function hasFeatureCollection()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.MBolli.PhpGeobuf.Data.FeatureCollection feature_collection = 4;</code>
     * @param \MBolli\PhpGeobuf\Data\FeatureCollection $var
     * @return $this
     */
    public function setFeatureCollection($var)
    {
        GPBUtil::checkMessage($var, \MBolli\PhpGeobuf\Data\FeatureCollection::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.MBolli.PhpGeobuf.Data.Feature feature = 5;</code>
     * @return \MBolli\PhpGeobuf\Data\Feature|null
     */
    public function getFeature()
    {
        return $this->readOneof(5);
    }

    public function hasFeature()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.MBolli.PhpGeobuf.Data.Feature feature = 5;</code>
     * @param \MBolli\PhpGeobuf\Data\Feature $var
     * @return $this
     */
    public function setFeature($var)
    {
        GPBUtil::checkMessage($var, \MBolli\PhpGeobuf\Data\Feature::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.MBolli.PhpGeobuf.Data.Geometry geometry = 6;</code>
     * @return \MBolli\PhpGeobuf\Data\Geometry|null
     */
    public function getGeometry()
    {
        return $this->readOneof(6);
    }

    public function hasGeometry()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.MBolli.PhpGeobuf.Data.Geometry geometry = 6;</code>
     * @param \MBolli\PhpGeobuf\Data\Geometry $var
     * @return $this
     */
    public function setGeometry($var)
    {
        GPBUtil::checkMessage($var, \MBolli\PhpGeobuf\Data\Geometry::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getDataType()
    {
        return $this->whichOneof("data_type");
    }

}

